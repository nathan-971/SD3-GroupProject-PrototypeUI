<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel_PlayerButtons.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAV4AAAHQCAMAAADeT/KAAAAABGdBTUEAALGPC/xhBQAAAOdQTFRFJn8A
        AHoAdJ1v9vj2ZJVdDXwAfKJ49ff1W5FTE3wA9vf1VY5MAHEAAHUAAG8AcpxtW5FUdZ1w/f79yNTHvcy7
        vs29vMy7ztnN+vv6XJFUEnwAF30AWI9Qwc/AydXIytXIytbIR4g7HX0AJ38DHn4AAHYAIn4AJ38CGn0A
        SIk98vTx////rcGqJH8ALIAROoQrOoQqgqV+7/Lv7vHt7fHtjKuJi6uIjqyKZJVet8i1tse0GH0A3+be
        zdjLG30ARIc48PPwr8KtAHsAcJtq/Pz8jauJAHgATotE8/bzqb6mHH0AQIYzssSwTtXx4wAAAAlwSFlz
        AAAOvgAADr4B6kKxwAAAAlVJREFUeF7t3cdOXEEQhtEaMDnnPMQBJxxwNs45vf/zeNObkVgx+mUw56x6
        VYtPulItWrfriugMDd8aaefL6oyOjU+0M33kjZI3St4oeaPkjZI3St4oeaPkjZI3St4oeaPkjZI3St4o
        eaPkjeoMTU5Nzwxmdm5sXt4LdRYWl5ZXBrO6tr6x2ebRZ2t7p7vbHcxed3n/oM2jz+FRr33ig+gdn7R5
        AAAAwD92m6C6Q1DdJajuESRvlLxRdZ+g6hHUtl8AAAAAAACAK+X0iJx68PARMfX47MlTUupZu65DQj1v
        BxLqRTuQUC9fvSamztuvEEho2y8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3zSlB1SGo3hBU7WkmIuSN
        kjeq3hJUPYLa9gsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcK29I6jeE1QfCPKYY5S8UfJG1UeCPEUa
        1bZfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIBr7RNB9Zmg+kKQxxyj5I2SN6q+ElTfCGrbLwAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAADfNOUH1naD6QZAXr6LkjZI3qn4SVD2C2vYLAAAAAAAAcKX8Iqh+E1Rn
        BLkEFSVvlLxR9YcgV/ii2vYLAAAAAJd0ctybGVzv6LDNo8/B/nJ3rzuY3e7O9labR5/NjfW11ZXBLC8t
        LnTaPPpMzI/NzbZP/LKmpyaH5L3QxPjY6KBpRm4Ny3sxeaPkjZI3St4oeaPkjZI3St4oeaPkjZI3St4o
        eaPkjZI3St6o/ytv1V+2vAN6AWST7gAAAABJRU5ErkJggg==
</value>
  </data>
</root>